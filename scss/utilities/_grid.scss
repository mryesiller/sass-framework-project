@use 'sass:math';
@use '../variables/' as *;

$grid-columns : 12;
$container-width : 1200px !default;
$grid-gaps :(
    "0":0,
    "1":10px,
    "2":20px,
    "3":30px,
    "4":40px,
    "5":50px
);

.container {
    width : 100%;
    max-width : $container-width;
    margin : 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}

.row {
    display: flex ;
    flex-grow:row wrap;
}

@each $key,$val in $grid-gaps {
    .gap-#{$key} > * {
        margin : $val;
    }
    .gap-#{$key} {
        margin-left: -$val;
        margin-right: -$val;
    }
}


@for $i from 1 through $grid-columns {
    .col-#{$i} {
        box-sizing: border-box;
        flex-grow:0;
        width:math.div($i*100%,$grid-columns);
    }
}

@include xs {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xs {
            box-sizing: border-box;
            flex-grow:0;
            width:math.div($i*100%,$grid-columns);
        }
    }
}

@include sm {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-sm {
            box-sizing: border-box;
            flex-grow:0;
            width:math.div($i*100%,$grid-columns);
        }
    }
}

@include md {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-md {
            box-sizing: border-box;
            flex-grow:0;
            width:math.div($i*100%,$grid-columns);
        }
    }
}

@include lg {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-lg {
            box-sizing: border-box;
            flex-grow:0;
            width:math.div($i*100%,$grid-columns);
        }
    }
}

@include xl {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xl {
            box-sizing: border-box;
            flex-grow:0;
            width:math.div($i*100%,$grid-columns);
        }
    }
}